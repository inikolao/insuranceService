package generatedSources.Inquiry.schemas.dynamics.microsoft.codeunit.webinquiry;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.5.0
 * 2022-01-18T00:49:54.696+02:00
 * Generated source version: 3.5.0
 *
 */
@WebServiceClient(name = "WebInquiry",
                  wsdlLocation = "file:/D:/Ioannis/Documents/Projects/Code/Java/insuranceService/src/main/resources/wsdls/GetInquiry/GetInquiry.wsdl",
                  targetNamespace = "urn:microsoft-dynamics-schemas/codeunit/WebInquiry")
public class WebInquiry extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("urn:microsoft-dynamics-schemas/codeunit/WebInquiry", "WebInquiry");
    public final static QName WebInquiryPort = new QName("urn:microsoft-dynamics-schemas/codeunit/WebInquiry", "WebInquiry_Port");
    static {
        URL url = null;
        try {
            url = new URL("file:/D:/Ioannis/Documents/Projects/Code/Java/insuranceService/src/main/resources/wsdls/GetInquiry/GetInquiry.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(WebInquiry.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/D:/Ioannis/Documents/Projects/Code/Java/insuranceService/WSDLS/Statements/GetInquiry/GetInquiry.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public WebInquiry(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public WebInquiry(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WebInquiry() {
        super(WSDL_LOCATION, SERVICE);
    }

    public WebInquiry(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public WebInquiry(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public WebInquiry(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns WebInquiryPort
     */
    @WebEndpoint(name = "WebInquiry_Port")
    public WebInquiryPort getWebInquiryPort() {
        return super.getPort(WebInquiryPort, WebInquiryPort.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WebInquiryPort
     */
    @WebEndpoint(name = "WebInquiry_Port")
    public WebInquiryPort getWebInquiryPort(WebServiceFeature... features) {
        return super.getPort(WebInquiryPort, WebInquiryPort.class, features);
    }

}
